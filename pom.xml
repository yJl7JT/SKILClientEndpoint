<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ai.skymind.skil.examples</groupId>
    <artifactId>skil-example-mnist-tf</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>



    <name>SKIL Community Edition Examples 1.0.0 - Building MNIST with Tensor Flow</name>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <shadedClassifier>bin</shadedClassifier>
        <java.version>1.8</java.version>
        <scala.binary.version>2.10</scala.binary.version>
        <spark.version>1</spark.version>
        <nd4j.gpu.backend>nd4j-cuda-8.0</nd4j.gpu.backend>
        <nd4j.cpu.backend>nd4j-native</nd4j.cpu.backend>
<!--
        <nd4j.version>0.9.2-SNAPSHOT</nd4j.version>
        <datavec.version>0.9.2-SNAPSHOT</datavec.version>
        <dl4j.version>0.9.2-SNAPSHOT</dl4j.version>
    -->

        <nd4j.version>0.9.1</nd4j.version>
        <datavec.version>0.9.1</datavec.version>
        <dl4j.version>0.9.1</dl4j.version>


        <dl4j.spark.version>0.9.2_spark_${spark.version}-SNAPSHOT</dl4j.spark.version>
        
        <mapdb.version>3.0.2</mapdb.version>
        <slf4j.version>1.7.12</slf4j.version>
        <junit.version>4.12</junit.version>
        <jcommander.version>1.27</jcommander.version>
        <maven-surefire.version>2.19.1</maven-surefire.version>
        <maven-shade-plugin.version>3.0.0</maven-shade-plugin.version>
        <exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
        <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
        <maven-build-helper-plugin.version>1.12</maven-build-helper-plugin.version>
    </properties>

    <repositories>
        <repository>
            <id>snapshots-repo</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
    </repositories>


    <dependencies>






        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>${nd4j.cpu.backend}</artifactId>
            <version>${nd4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-api</artifactId>
            <version>${nd4j.version}</version>
        </dependency>
<!--
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-kryo_${scala.binary.version}</artifactId>
            <version>${nd4j.version}</version>
        </dependency>
-->
        <dependency>
            <groupId>org.datavec</groupId>
            <artifactId>datavec-api</artifactId>
            <version>${datavec.version}</version>
        </dependency>
<!--
        <dependency>
            <groupId>org.datavec</groupId>
            <artifactId>datavec-spark_${scala.binary.version}</artifactId>
            <version>${dl4j.spark.version}</version>
        </dependency>
-->
        <dependency>
            <groupId>org.datavec</groupId>
            <artifactId>datavec-spark-inference-model</artifactId>
            <version>${datavec.version}</version>
        </dependency>




        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.9</version>
            
        </dependency>

        <!-- JTDS open source driver (for old snapshot data) -->
        <dependency>
            <groupId>net.sourceforge.jtds</groupId>
            <artifactId>jtds</artifactId>
            <version>1.3.1</version>
        </dependency>

        <!-- Couchbase driver -->
        <dependency>
            <groupId>com.couchbase.client</groupId>
            <artifactId>java-client</artifactId>
            <version>2.4.6</version>
        </dependency>

        <!-- MapDB - Used for data pipeline -->
        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
            <version>${mapdb.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>



        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>1.5.3.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>4.3.8.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.8</version>
        </dependency>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.72</version>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>


        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.7</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>

<!--
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>2.7.3</version>
        </dependency>
-->

    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.5.3.RELEASE</version>

                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>





            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire.version}</version>
                <configuration>
                    <!--
                     By default: Surefire will set the classpath based on the manifest. Because tests are not included
                     in the JAR, any tests that rely on class path scanning for resources in the tests directory will not
                     function correctly without this configuratino.
                     For example, tests for custom layers (where the custom layer is defined in the test directory)
                     will fail due to the custom layer not being found on the classpath.
                     http://maven.apache.org/surefire/maven-surefire-plugin/examples/class-loading.html
                     -->
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                </configuration>
            </plugin>





        </plugins>
    </build>

</project>
